name: Coverage

on:
  push:
    branches:
      - per-project-coverage

jobs:
  coverage--core:
    name: Test coverage for @packagelint/core
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NVMRC }}

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ env.NVMRC }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --prefer-offline

      - name: Run tests
        run: |
          cd packages/core
          yarn run test:coverage

      - name: Report package test coverage to coveralls.io
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ github.token }}
          path-to-lcov: packages/core/coverage-local/lcov.info
          base-path: packages/core
          git-branch: x-cov-core

  coverage--packagelint:
    name: Test coverage for @packagelint/packagelint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NVMRC }}

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ env.NVMRC }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --prefer-offline

      - name: Run tests
        run: |
          cd packages/packagelint
          yarn run test:coverage

      - name: Report package test coverage to coveralls.io
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ github.token }}
          path-to-lcov: packages/packagelint/coverage-local/lcov.info
          base-path: packages/packagelint
          git-branch: x-cov-packagelint

  coverage--packagelint-cli:
    name: Test coverage for @packagelint/packagelint-cli
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NVMRC }}

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ env.NVMRC }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --prefer-offline

      - name: Run tests
        run: |
          cd packages/packagelint-cli
          yarn run test:coverage

      - name: Report package test coverage to coveralls.io
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ github.token }}
          path-to-lcov: packages/packagelint-cli/coverage-local/lcov.info
          base-path: packages/packagelint-cli
          git-branch: x-cov-packagelint-cli

  coverage--presets:
    name: Test coverage for @packagelint/presets
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NVMRC }}

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ env.NVMRC }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --prefer-offline

      - name: Run tests
        run: |
          cd packages/presets
          yarn run test:coverage

      - name: Report package test coverage to coveralls.io
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ github.token }}
          path-to-lcov: packages/presets/coverage-local/lcov.info
          base-path: packages/presets
          git-branch: x-cov-presets

  coverage--types:
    name: Test coverage for @packagelint/types
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NVMRC }}

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ env.NVMRC }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --prefer-offline

      - name: Run tests
        run: |
          cd packages/types
          yarn run test:coverage

      - name: Report package test coverage to coveralls.io
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ github.token }}
          path-to-lcov: packages/types/coverage-local/lcov.info
          base-path: packages/types
          git-branch: x-cov-types
